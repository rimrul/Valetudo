name: Node.js CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run lint
    - run: npm run build --if-present
#    - run: npm test
      env:
        CI: true


  trusty-armv7:
    runs-on: ubuntu-latest
    name: Build on roborock-like system
    
    steps:
      - uses: actions/checkout@v2
      - uses: rimrul/run-on-arch-action@Valetudo-testing
        id: runcmd
        with:
          architecture: armv7
          distribution: ubuntu14.04
          run: |
            sudo sed -i -e 's/:\/\/(archive.ubuntu.com\|security.ubuntu.com)/old-releases.ubuntu.com/g' /etc/apt/sources.list
            VERSION=node_9.x
            DISTRO="$(lsb_release -s -c)"
            echo "deb https://deb.nodesource.com/$VERSION $DISTRO main" | sudo tee /etc/apt/sources.list.d/nodesource.list
            echo "deb-src https://deb.nodesource.com/$VERSION $DISTRO main" | sudo tee -a /etc/apt/sources.list.d/nodesource.list
            sudo apt-get update
            sudo apt-get -y install curl
            curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -
            sudo apt-get update
            sudo apt-get -y install nodejs 
            sudo apt-get -y install nodejs-legacy npm
            npm config set strict-ssl false
            npm install npm -g
            npm install
            npm run build --if-present
            echo ::set-output name=uname::$(cat /github/workspace/npm-debug.log)
      - name: Get the output
        run: |
            echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
